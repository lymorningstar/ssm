<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	
	<context:annotation-config />
	<context:component-scan base-package="com.how2java.tmall.service"/>
	 
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性url，user，password -->
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		
		<!-- 配置初始化大小，最大，最小 -->
		<property name="initialSzie" value="1"/>
		<property name="minIdle" value="1"/>
		<property name="maxActive" value="20"/>
		
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000"/>
		
		<!--设置间隔多久才进行一次检测，检测需要关闭的空闲拦截，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		
		<!-- 配置一个连接在池中的最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis"/>
		
		<property name="validationQuery" value="SELECT 1"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		
		<!-- 打开PSCache，并且制定每个连接上PSCcche的大小 -->
		<property name="poolPreparedStatements" value="true"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
	</bean>
	
	
	<!--   Mybatis的sessionFactory配置-->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
	<!--  mapperLocations：它表示我们的Mapper文件存放的位置，当我们的Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值。
configLocation：用于指定Mybatis的配置文件位置。如果指定了该属性，那么会以该配置文件的内容作为配置信息构建对应的SqlSessionFactoryBuilder，但是后续属性指定的内容会覆盖该配置文件里面指定的对应内容。
 typeAliasesPackage：它一般对应我们的实体类所在的包，这个时候会自动取对应包中不包括包名的简单类名作为包括包名的别名。多个package之间可以用逗号或者分号等来进行分隔。(value的值一定要是包的全名)
 typeAliases：数组类型，用来指定别名的。指定了这个属性后，Mybatis会把这个类型的短名称作为这个类型的别名，前提是该类上没有标注@Alias注解，否则将使用该注解对应的值作为此种类型的别名。(value的值一定要是类的完全限定名) -->
		<property name="typeAliasesPackage" value="com.how2java.tmall.pojo"/>
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocation" value="classpath:mapper/*.xml"/>
		<!-- 分页插件，目前先注释，后面重构的时候用到 
			<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
						</value>
					</property>
				</bean>
			</array>
			</property>
		-->
	</bean>
	
	<!-- Mybatis的Mapper文件识别 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.how2java.tmall.mapper"/>
	</bean>
</beans>